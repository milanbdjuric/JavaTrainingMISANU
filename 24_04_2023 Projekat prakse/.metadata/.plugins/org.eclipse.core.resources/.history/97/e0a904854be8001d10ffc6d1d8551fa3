package praksa;

import java.util.*;

public class GoT {

	private Map<Character, List<Message>> characterMessages;
	private List<CharacterData> characterDataList;
	
	GoT(){
		this.characterMessages = new HashMap<Character, List<Message>>();
		this.characterDataList = new ArrayList<CharacterData>();
	}
	
	public void load() throws Exception {
		
		String metaData = FileHelper.loadMetaData();
		String[] lines = metaData.split(System.lineSeparator());
		
		for(int i = 1; i < lines.length; i++) {
			String[] fields = lines[i].split(StringExtractor.COMMA);
				
			CharacterData characterData = new CharacterData();
			characterData.setCharacter(new Character().extractFromString(fields[0], StringExtractor.SPACE));
			characterData.setAllegiance(fields[1].trim());
			characterData.setMessageFileName(fields[2].trim());
			characterDataList.add(characterData);
			
			List<String> messageLines = FileHelper.loadMessages(fields[2].trim());
			List<Message> messages = new ArrayList<>();
			
            for (String message : messageLines) {
                messages.add(new Message().extractFromString(message, StringExtractor.COMMA));
            }
            characterMessages.put(characterData.getCharacter(), messages);
        }	
	}

	public Map<Character, List<Message>> getCharacterMessages() {
		return characterMessages;
	}

	public List<CharacterData> getCharacterDataList() {
		return characterDataList;
	}
	
	public Character getCharacterByName(String name) throws Exception {
		for(CharacterData characterdata: characterDataList) {
			if(characterdata.getCharacter().getFirstName().contains(name))
				return characterdata.getCharacter();
			
		}
		throw new Exception("There`s no such character here. ");
	}
	
	private List<Message> getMessagesForCharacter(Character character){
		return this.characterMessages.get(character);
	}
	
	private String characterAllMessageContent(Character character) {
		List<Message> messages = characterMessages.get(character);
		StringBuilder content = new StringBuilder();
		for(Message message : messages) {
			content.append(message.getContent());
			content.append(System.lineSeparator());
		}
		return content.toString();	
	}
	
	public void printCharacterMessages(Character character) {
		List<Message> messages = getMessagesForCharacter(character);
		for(Message message : messages) {
			System.out.println(message.toString());
		}	
	}
	
	
	
	
	

}
