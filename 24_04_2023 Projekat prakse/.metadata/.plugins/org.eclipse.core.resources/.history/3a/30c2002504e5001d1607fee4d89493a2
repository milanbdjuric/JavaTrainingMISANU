package praksa;

import java.util.*;

public class Mejn {

	public static void main(String[] args) {
		
		List<Character> characters = CharacterHelper.importCharacters();
		
		Character daenerys = CharacterHelper.getCharacterByName("Daenerys");
		
		Messages daenerysMessages = new Messages(daenerys);
		
		daenerysMessages.printMessages();
			
		System.out.println();
		
		Character happiest = null;
		int maxHappy = Integer.MIN_VALUE;
		
		Character saddest = null;
		int maxSad = Integer.MAX_VALUE;
		
		for(Character character : characters) { 
			
			Messages messages = new Messages(character);
			
			int count = messages.countMessages();		
			int happy = messages.countEmojis("happy");
			int sad = messages.countEmojis("sad");
			int disposition = messages.happinessIndex();
			String dispositionString = messages.disposition();
			
			System.out.println(character.getName() + " had " + count + " messages. " 
			+ happy + " happy and " + sad + " sad emojis - " + dispositionString);
			
			if(disposition > maxHappy) {
				happiest = character;
				maxHappy = disposition;
			}
			
			if(disposition < maxSad) {
				saddest = character;
				maxSad = disposition;
			}	
		}
		
		System.out.println("\nThe happiest character is " + happiest.getName() 
		+ " of " + happiest.getAllegiance() + ".");
		
		System.out.println("The saddest character is " + saddest.getName() 
		+ " of " + saddest.getAllegiance() + ".");
		
		
		Character jon = CharacterHelper.getCharacterByName("Jon");
		
		Messages jonsMessages = new Messages(jon);
		
		int jonLovesDaenerys = jonsMessages.countEmojisSentTo(daenerys, "love");
		
		int daenerysLovesJon = daenerysMessages.countEmojisSentTo(jon, "love");
		
		System.out.println("\nJon " + jonLovesDaenerys + " : " + daenerysLovesJon + " Daenerys  -- Love emoji sent to each other results!");
		
		if(jonLovesDaenerys > daenerysLovesJon)
			System.out.println("Jon loves Daenerys more than Daenerys loves Jon.");
		
		else if(jonLovesDaenerys < daenerysLovesJon)
			System.out.println("\nDaenerys loves Jon more than Jon loves Daenerys.");
		
		else
			System.out.println("\nDaenerys and Jon love each other equally.");
			
			
		System.out.println(jonLovesDaenerys);
		System.out.println(daenerysLovesJon);
			
			
		
		
		
		
		
		
		
		
		
		
		
		
/*		
		
		
		int jonLovesDany = 0;
		int danyLovesJon = 0;
		
		for(Character character : characters) {
			
			Messages messages = new Messages(character);
			
			int inLove = messages.countEmojis("love");
			
			Pattern pattern = Pattern.compile("^Jon.*|^Daenerys.*");
	
			for(String message : messages.getMessages()) {
				
				Matcher matcher = pattern.matcher(message);
				
				if(matcher.matches()) {				
					
					if(character.getName().contains("Daenerys"))
						danyLovesJon = inLove;
					if(character.getName().contains("Jon"))
						jonLovesDany = inLove;	
				}
			}
		}
		
		if(jonLovesDany > danyLovesJon)
			System.out.println("\nJon loves Daenerys more than Daenerys loves Jon.");
		
		else if(jonLovesDany < danyLovesJon)
			System.out.println("\nDaenerys loves Jon more than Jon loves Daenerys.");
		
		else
			System.out.println("\nDaenerys and Jon love each other equally.");
*/	

	}
}
